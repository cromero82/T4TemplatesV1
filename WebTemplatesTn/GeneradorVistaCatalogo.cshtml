

 
@model GenPersona VM
@{ MvcForm form;  }

<div id="GenPersona ">    
    @if (ViewBag.Accion == "Insertar") { form = Ajax.BeginForm("InsGenPersona ", "GenPersona ", new { Area = "General" }, new AjaxOptions { HttpMethod = "POST", OnSuccess = "onSuccessGenerico", OnFailure = "onFailureGenerico" }, new { enable_placeholder = "" }); }
    else {                               form = Ajax.BeginForm("UpdGenPersona ", "GenPersona ", new { Area = "General" }, new AjaxOptions { HttpMethod = "POST", OnSuccess = "onSuccessGenerico", OnFailure = "onFailureGenerico" }, new { enable_placeholder = "" }); }

	@*@if (ViewBag.Accion == "Insertar") { form = Ajax.BeginForm("InsGenPersona ", "GenPersona ", new { Area = "General" }, new AjaxOptions { HttpMethod = "POST", OnSuccess = "onSuccessGenPersona ", OnFailure = "onFailureGenPersona " }, new { enable_placeholder = "" }); }
    else {                               form = Ajax.BeginForm("UpdGenPersona ", "GenPersona ", new { Area = "General" }, new AjaxOptions { HttpMethod = "POST", OnSuccess = "onSuccessGenPersona ", OnFailure = "onFailureGenPersona " }, new { enable_placeholder = "" }); }*@

    @using (form)
    {        
        @Html.AntiForgeryToken()
        @Html.HiddenFor(m => m.Id)
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            <h4 class="modal-title">@ViewBag.Accion Persona  </h4>
        </div>

        <div class="modal-body">
            @Html.HiddenFor(m => m.Estregistro, new { Value = 1 })
            @Html.Partial("_ValidationSummaryPersonalizado")
                <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(m => m.TdocumentoId)
                        @(Html.Kendo().DropDownListFor(model => model.TdocumentoId)                              
                              .DataTextField("Nombre")
                              .DataValueField("Id")
                              .OptionLabel("Seleccione...")
                              .DataSource(source =>
                              {
                                  source.Custom().Type("aspnetmvc-ajax")
                                      .Transport(t =>
                                      {
                                          t.Read(r => r.Action("GetListTdocumentos", "Tlistas", new { Area = "ADMIN" }).Type(HttpVerbs.Post));
                                      })
                                      .ServerFiltering(false)
                                      .Schema(s => { s.Data("Data").Total("Total").Errors("Errors"); })
                                      .Events(e => e.Error("handleOnErrorModelState"));
                              })
                              .Filter("contains")
                            .HtmlAttributes(new { style = "width:100%;", @class = "itemComponente" })
                        )
                        @Html.ValidationMessageFor(m => m.TdocumentoId)
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(m => m.NumDoc)
                        @(Html.TextBoxFor(m => m.NumDoc, new { @class = "form-control", autocomplete = "off" }))
                        @Html.ValidationMessageFor(m => m.NumDoc)
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.Label("Departamento del documento")
                        @(Html.Kendo().DropDownListFor(m=>m.TdepartamentoId)
                      .Name("departamentos")
                      .HtmlAttributes(new { style = "width:100%" })
                      .OptionLabel("Seleccione departamento...")
                      .DataTextField("Nombre")
                      .DataValueField("DepartamentoId")
                      .Filter("contains")
                              .DataSource(source =>
                              {
                                  source.Custom().Type("aspnetmvc-ajax")
                                      .Transport(t =>
                                      {
                                          t.Read(r => r.Action("GetListTdepartamentos", "Tlistas", new { Area = "ADMIN" }).Type(HttpVerbs.Post));
                                      })
                                      .ServerFiltering(false)
                                      .Schema(s =>
                                      {
                                          s.Data("Data").Total("Total").Errors("Errors");
                                      })
                                      .Events(e => e.Error("handleOnErrorModelState"));
                              })
                            .HtmlAttributes(new { style = "width:100%;", @class = "itemComponente" })
                        )
                    </div>

                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(m => m.TmunicipioId)
                        @(Html.Kendo().DropDownListFor(m => m.TmunicipioId)
                      .HtmlAttributes(new { style = "width:100%" })
                      .OptionLabel("Select order...")
                      .DataTextField("Nombre")
                      .DataValueField("Id")
                      .Filter("contains")
                      .DataSource(source =>
                      {
                          source.Custom().Type("aspnetmvc-ajax")
                              .Transport(t =>
                              {
                                  t.Read(r => r.Action("GetListTmunicipios", "Tlistas", new { Area = "ADMIN" }).Type(HttpVerbs.Post));
                              })
                              .ServerFiltering(true)
                              .Schema(s => { s.Data("Data").Total("Total").Errors("Errors"); })
                              .Events(e => e.Error("handleOnErrorModelState"));
                      })
                      .Enable(false)
                      .AutoBind(false)
                      .CascadeFrom("departamentos")
                        )
                        @Html.ValidationMessageFor(m => m.TmunicipioId)
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(m => m.PrimerNombre)
                        @(Html.TextBoxFor(m => m.PrimerNombre, new { @class = "form-control", autocomplete = "off" }))
                        @Html.ValidationMessageFor(m => m.PrimerNombre)
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(m => m.SegundoNombre)
                        @(Html.TextBoxFor(m => m.SegundoNombre, new { @class = "form-control", autocomplete = "off" }))
                        @Html.ValidationMessageFor(m => m.SegundoNombre)
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(m => m.PrimerApellido)
                        @(Html.TextBoxFor(m => m.PrimerApellido, new { @class = "form-control", autocomplete = "off" }))
                        @Html.ValidationMessageFor(m => m.PrimerApellido)
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(m => m.SegundoApellido)
                        @(Html.TextBoxFor(m => m.SegundoApellido, new { @class = "form-control", autocomplete = "off" }))
                        @Html.ValidationMessageFor(m => m.SegundoApellido)
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(m => m.FechaNacimiento)
                        @(Html.Kendo().DatePickerFor(model => model.FechaNacimiento)
                              .Max(String.Format("{0:d}", DateTime.Now))
               //.Value(Model.FechaNacimiento)// String.Format("{0:d}", DateTime.Now))
               //.Culture("es-CO")

               //.DateInput()
               .Format("dd/MM/yyyy")
               .ParseFormats(new String[] { "dd/MM/yyyy" })
                              //.Value(Model.FechaNacimiento ?? DateTime.Today)
                              //.Events(e =>
                              //{
                              //    e.Change("change");
                              //})
                              .HtmlAttributes(new
                              {
                                  @class = "",
                                  style = "width: 100%",
                                  @maxlength = "10",
                                  @placeholder = "DD/MM/AAAA"
                              })
                        )
                        @Html.ValidationMessageFor(m => m.FechaNacimiento)
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(m => m.Telefono)
                        @(Html.TextBoxFor(m => m.Telefono, new { @class = "form-control", autocomplete = "off" }))
                        @Html.ValidationMessageFor(m => m.Telefono)
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(m => m.Telefono2)
                        @(Html.TextBoxFor(m => m.Telefono2, new { @class = "form-control", autocomplete = "off" }))
                        @Html.ValidationMessageFor(m => m.Telefono2)
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(m => m.CorreoElectronico)
                        @(Html.TextBoxFor(m => m.CorreoElectronico, new { @class = "form-control", autocomplete = "off" }))
                        @Html.ValidationMessageFor(m => m.CorreoElectronico)
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-12">
                    <div class="form-group">
                        @Html.LabelFor(m => m.Direccion)
                        @(Html.TextBoxFor(m => m.Direccion, new { @class = "form-control", autocomplete = "off" }))
                        @Html.ValidationMessageFor(m => m.Direccion)
                    </div>
                </div>
            </div>
        </div>

        <div class="modal-footer">
            <button type="button" class="btn btn-default" data-dismiss="modal">Cerrar</button>
            <button type="submit" class="btn btn-primary">Guardar</button>
        </div>
    }

    <!-- Inicialización script de vista -->
    <script>
	@(controllerName).initEdicion("@(ViewBag.Accion)");
    </script>
</div>